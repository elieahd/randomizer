name: üöÄ Deploy

on:
  push:
    branches:
      - 'main'
      - 'chore/deploy-artifact'
    paths-ignore:
      - '**.md'

jobs:
  checks:
    name: ‚úÖ Pre-deployment checks
    uses: ./.github/workflows/wk-checks.yaml
    with:
      upload-codecov: true
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  package:
    name: üì¶Ô∏è Package
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: ‚§µÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: üì¶Ô∏è Package library
        run: mvn package

      - name: üî¢ Get current version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION=$(echo "$VERSION" | sed 's/-SNAPSHOT$//')
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

      - name: ‚öôÔ∏è Configure Maven Repository Credentials
        env:
          OSS_CENTRAL_USERNAME: ${{ secrets.OSS_USERNAME }}
          OSS_CENTRAL_PASSWORD: ${{ secrets.OSS_PASSWORD }}
        run: |
          echo "<settings>
            <servers>
              <server>
                <id>central</id>
                <username>${OSS_CENTRAL_USERNAME}</username>
                <password>${OSS_CENTRAL_PASSWORD}</password>
              </server>
            </servers>
          </settings>" > $HOME/.m2/settings.xml

      - name: üöÄ Deploy artifact to maven central
        run: mvn deploy

      - name: üìçTag current version
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ steps.version.outputs.value }}" -m "chore(release): v${{ steps.version.outputs.value }}"
          git push origin "v${{ steps.version.outputs.value }}"

      - name: üÜô Create GitHub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ steps.version.outputs.value }}" \
            --title "Release v${{ steps.version.outputs.value }}" \
            --generate-notes
