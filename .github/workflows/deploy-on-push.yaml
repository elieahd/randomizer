name: 🚀 Deploy

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'

jobs:
  checks:
    name: ✅ Pre-deployment checks
    uses: ./.github/workflows/wk-checks.yaml
    with:
      upload-codecov: true
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  package:
    name: 📦️ Package
    runs-on: ubuntu-latest
    needs: [ checks ]
    steps:
      - name: ⤵️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh-releases
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: 🚀 Deploy artifact to maven central
        run: mvn deploy -DskipTests
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: 🔢 Get current version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          VERSION=$(echo "$VERSION" | sed 's/-SNAPSHOT$//')
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

      - name: 📍Tag current version
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v${{ steps.version.outputs.value }}" -m "chore(release): v${{ steps.version.outputs.value }}"
          git push origin "v${{ steps.version.outputs.value }}"

      - name: 🆙 Create GitHub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "v${{ steps.version.outputs.value }}" \
            --title "Release v${{ steps.version.outputs.value }}" \
            --generate-notes
